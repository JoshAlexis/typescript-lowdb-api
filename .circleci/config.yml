version: 2.1

parameters:
  first-deploy:
    type: boolean
    default: true
  update:
    type: boolean
    default: false

executors:
  docker-publisher:
    environment:
      IMAGE_TAG: joshyelcg/lowdb-api
    docker:
      - image: docker:20.10.14

jobs:
  build:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: docker build --tag "${IMAGE_TAG}:${CIRCLE_SHA1}" .
      - run:
          name: Archive Docker Image
          command: docker save --output image.tar "${IMAGE_TAG}:${CIRCLE_SHA1}"
      - persist_to_workspace:
          root: .
          paths:
            - "./image.tar"
  push:
    executor: docker-publisher
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Load Docker Image
          command: docker load --input /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image
          command: |
            echo "${DOCKERHUB_PASS}" | docker login --username "${DOCKERHUB_USERNAME}" --password-stdin
            docker push "${IMAGE_TAG}:${CIRCLE_SHA1}"
  first-deploy:
    environment:
      IMAGE_TAG:
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - add_ssh_keys:
          fingerprints:
            - b6:78:ac:c7:1e:e9:ec:28:6c:41:9a:30:29:7e:e8:3a
      - run:
          name: Deploy Over SSH
          command: |
            ssh $SSH_USER@$SSH_HOST "docker service create ${IMAGE_TAG}:${CIRCLE_SHA1} lowdb-api --env PORT=${PORT}"
  
  deploy:
    environment:
      IMAGE_TAG:
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - add_ssh_keys:
          fingerprints:
            - "b6:78:ac:c7:1e:e9:ec:28:6c:41:9a:30:29:7e:e8:3a"
      - run:
          name: Deploy Over SSH
          command: |
            ssh $SSH_USER@$SSH_HOST "docker service update lowdb-api --image ${IMAGE_TAG}:${CIRCLE_SHA1}"

workflows:
  version: 2
  build-push-first-deploy:
    when: << pipeline.parameters.first-deploy >>
    jobs:
      - build
      - push:
          requires:
            - build
          filters:
            branches:
              only: main
      - first-deploy:
          requires:
            - push
  
  build-push-update-deploy:
    when: << pipeline.parameters.update >>
    jobs:
      - build
      - push:
          requires:
            - build
          filters:
            branches:
              only: main
      - deploy:
          requires:
            - push